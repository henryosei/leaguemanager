<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Ramsey\Uuid\Uuid;
use DB;

class MatchResult extends Model
{
    use HasFactory;

    protected $fillable = ["uuid", "match_id", "team_id", "player_id", "stat_type", "time_scored"];

    protected static function boot()
    {
        self::creating(function ($model) {
            $model->uuid = Uuid::uuid4();
        });
        parent::boot(); // TODO: Change the autogenerated stub
    }

    public static function goals($matchId)
    {
        return DB::table("match_results as m")
            ->join("teams as t", "t.id", "=", "m.team_id")
            ->where("m.match_id", "=", $matchId)
            ->select("t.id", "t.team_name", DB::raw("count(m.id) as goals"))->groupBy("t.id", "t.team_name")->get();
    }

    public static function goalDetails($matchId)
    {
//        return DB::table("match_results as m")
//            ->join("players as p","p.id","=","m.player_id")
//            ->where("m.id", "=",$matchId)
//            ->select("p.id","p.full_name","time_scored")
//            ->get();

        return DB::select("select p.full_name,p.id,m.time_scored,m.team_id,m.stat_type
                                    from match_results m, players p where m.player_id=p.id and m.match_id=?", [$matchId]);
    }
}
